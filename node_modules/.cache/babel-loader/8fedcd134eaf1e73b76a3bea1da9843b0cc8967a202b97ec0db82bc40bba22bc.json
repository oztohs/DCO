{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab1\\\\Desktop\\\\testpage\\\\BlackMuji\\\\react-test\\\\src\\\\pages\\\\ParentForm.js\",\n  _s = $RefreshSig$();\n// ParentComponent.js\nimport React, { useState } from 'react';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParentForm() {\n  _s();\n  const [registerActive, setRegisterActive] = useState(true);\n  const [loginActive, setLoginActive] = useState(false);\n  const handleRegisterSubmit = e => {\n    e.preventDefault();\n    // RegisterForm에서의 submit 처리\n    // POST 요청 보내기\n    fetch('http://localhost:5000/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log('User registered:', data);\n      // 등록이 성공했을 때 실행할 코드를 여기에 추가합니다.\n    }).catch(error => {\n      console.error('Error registering user:', error);\n      // 등록에 실패했을 때 실행할 코드를 여기에 추가합니다.\n    });\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    // LoginForm에서의 submit 처리\n  };\n  const handleToggleForm = () => {\n    setRegisterActive(!registerActive);\n    setLoginActive(!loginActive);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RegisterForm, {\n      isActive: registerActive,\n      handleSubmit: handleRegisterSubmit,\n      handleChange: () => {},\n      formData: {} // formData는 필요에 따라서 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      isActive: loginActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleForm,\n      children: \"\\uD3FC \\uC804\\uD658\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ParentForm, \"FpcRtYb0u7TSrzM/87DW/7OYloI=\");\n_c = ParentForm;\nexport default ParentForm;\nvar _c;\n$RefreshReg$(_c, \"ParentForm\");","map":{"version":3,"names":["React","useState","RegisterForm","LoginForm","jsxDEV","_jsxDEV","ParentForm","_s","registerActive","setRegisterActive","loginActive","setLoginActive","handleRegisterSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","formData","then","response","json","data","console","log","catch","error","handleLoginSubmit","handleToggleForm","children","isActive","handleSubmit","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lab1/Desktop/testpage/BlackMuji/react-test/src/pages/ParentForm.js"],"sourcesContent":["// ParentComponent.js\r\nimport React, { useState } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction ParentForm() {\r\n  const [registerActive, setRegisterActive] = useState(true);\r\n  const [loginActive, setLoginActive] = useState(false);\r\n\r\n  const handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    // RegisterForm에서의 submit 처리\r\n    // POST 요청 보내기\r\n    fetch('http://localhost:5000/api/user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('User registered:', data);\r\n        // 등록이 성공했을 때 실행할 코드를 여기에 추가합니다.\r\n      })\r\n      .catch(error => {\r\n        console.error('Error registering user:', error);\r\n        // 등록에 실패했을 때 실행할 코드를 여기에 추가합니다.\r\n      });\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    // LoginForm에서의 submit 처리\r\n  };\r\n\r\n  const handleToggleForm = () => {\r\n    setRegisterActive(!registerActive);\r\n    setLoginActive(!loginActive);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RegisterForm\r\n        isActive={registerActive}\r\n        handleSubmit={handleRegisterSubmit}\r\n        handleChange={() => { }}\r\n        formData={{}} // formData는 필요에 따라서 전달\r\n      />\r\n      <LoginForm isActive={loginActive} />\r\n      <button onClick={handleToggleForm}>폼 전환</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParentForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,oBAAoB,GAAIC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAC,KAAK,CAAC,gCAAgC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IAC/B,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,iBAAiB,GAAIjB,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BtB,iBAAiB,CAAC,CAACD,cAAc,CAAC;IAClCG,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEL,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACH,YAAY;MACX+B,QAAQ,EAAEzB,cAAe;MACzB0B,YAAY,EAAEtB,oBAAqB;MACnCuB,YAAY,EAAEA,CAAA,KAAM,CAAE,CAAE;MACxBd,QAAQ,EAAE,CAAC,CAAE,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFlC,OAAA,CAACF,SAAS;MAAC8B,QAAQ,EAAEvB;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpClC,OAAA;MAAQmC,OAAO,EAAET,gBAAiB;MAAAC,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAAChC,EAAA,CAhDQD,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAkDnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}