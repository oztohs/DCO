{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab1\\\\Desktop\\\\testpage\\\\BlackMuji\\\\react-test\\\\src\\\\pages\\\\ParentForm.js\",\n  _s = $RefreshSig$();\n// ParentComponent.js\nimport React, { useState } from 'react';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParentForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    user_id: '',\n    password: '',\n    email: ''\n  });\n  const [registerActive, setRegisterActive] = useState(true);\n  const [loginActive, setLoginActive] = useState(false);\n  const handleRegisterSubmit = e => {\n    e.preventDefault();\n    // RegisterForm에서의 submit 처리\n    // POST 요청 보내기\n    fetch('http://localhost:5000/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log('User registered:', data);\n      // 등록이 성공했을 때 실행할 코드를 여기에 추가합니다.\n    }).catch(error => {\n      console.error('Error registering user:', error);\n      // 등록에 실패했을 때 실행할 코드를 여기에 추가합니다.\n    });\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    // LoginForm에서의 submit 처리\n  };\n  const handleToggleForm = () => {\n    setRegisterActive(!registerActive);\n    setLoginActive(!loginActive);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"totalform\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleForm,\n        children: \"\\uD3FC \\uC804\\uD658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), registerActive && /*#__PURE__*/_jsxDEV(RegisterForm, {\n        isActive: registerActive,\n        handleSubmit: handleRegisterSubmit,\n        handleChange: () => {},\n        formData: {\n          setFormData\n        } // formData는 필요에 따라서 전달\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), loginActive && /*#__PURE__*/_jsxDEV(LoginForm, {\n        isActive: loginActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ParentForm, \"SFHaSs6j7K8KVcEHuST1xQ7edhc=\");\n_c = ParentForm;\nexport default ParentForm;\nvar _c;\n$RefreshReg$(_c, \"ParentForm\");","map":{"version":3,"names":["React","useState","RegisterForm","LoginForm","jsxDEV","_jsxDEV","ParentForm","_s","formData","setFormData","name","user_id","password","email","registerActive","setRegisterActive","loginActive","setLoginActive","handleRegisterSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","handleLoginSubmit","handleToggleForm","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isActive","handleSubmit","handleChange","_c","$RefreshReg$"],"sources":["C:/Users/lab1/Desktop/testpage/BlackMuji/react-test/src/pages/ParentForm.js"],"sourcesContent":["// ParentComponent.js\r\nimport React, { useState } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction ParentForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    user_id: '',\r\n    password: '',\r\n    email: ''\r\n  });\r\n\r\n  const [registerActive, setRegisterActive] = useState(true);\r\n  const [loginActive, setLoginActive] = useState(false);\r\n\r\n  const handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    // RegisterForm에서의 submit 처리\r\n    // POST 요청 보내기\r\n    fetch('http://localhost:5000/api/user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('User registered:', data);\r\n        // 등록이 성공했을 때 실행할 코드를 여기에 추가합니다.\r\n      })\r\n      .catch(error => {\r\n        console.error('Error registering user:', error);\r\n        // 등록에 실패했을 때 실행할 코드를 여기에 추가합니다.\r\n      });\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    // LoginForm에서의 submit 처리\r\n  };\r\n\r\n  const handleToggleForm = () => {\r\n    setRegisterActive(!registerActive);\r\n    setLoginActive(!loginActive);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='totalform'>\r\n        <button onClick={handleToggleForm}>폼 전환</button>\r\n        {registerActive && (\r\n          <RegisterForm\r\n            isActive={registerActive}\r\n            handleSubmit={handleRegisterSubmit}\r\n            handleChange={() => { }}\r\n            formData={{ setFormData }} // formData는 필요에 따라서 전달\r\n          />\r\n        )}\r\n        {loginActive && (\r\n          <LoginForm isActive={loginActive} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParentForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMiB,oBAAoB,GAAIC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAC,KAAK,CAAC,gCAAgC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;IAC/B,CAAC,CAAC,CACCmB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,iBAAiB,GAAIhB,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrB,iBAAiB,CAAC,CAACD,cAAc,CAAC;IAClCG,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEX,OAAA;IAAAgC,QAAA,eACEhC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBhC,OAAA;QAAQkC,OAAO,EAAEH,gBAAiB;QAAAC,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC/C7B,cAAc,iBACbT,OAAA,CAACH,YAAY;QACX0C,QAAQ,EAAE9B,cAAe;QACzB+B,YAAY,EAAE3B,oBAAqB;QACnC4B,YAAY,EAAEA,CAAA,KAAM,CAAE,CAAE;QACxBtC,QAAQ,EAAE;UAAEC;QAAY,CAAE,CAAC;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CACF,EACA3B,WAAW,iBACVX,OAAA,CAACF,SAAS;QAACyC,QAAQ,EAAE5B;MAAY;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpC,EAAA,CA7DQD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AA+DnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}